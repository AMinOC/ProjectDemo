<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--
    AppbarLayout 要作为CoordinatorLayout 的直接子View使用，
    而CollapsingToolbarLayout 要作为AppbarLayout 的直接子View 使用，
    否则，是得不到我们想要的效果的。
    -->

    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar_layout"
        android:layout_width="match_parent"
        android:layout_height="250dp">

        <!--
        当CollapsingToolbarLayout和Toolbar同时存在时，
        优先使用CollapsingToolbarLayout的title，
        否则可能会出现意想不到的bug
        -->

        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapse_layout"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:contentScrim="@color/c_3ec88e"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            app:title="展开的标题"
            app:statusBarScrim="@color/bg_gradient_end"
            >

            <!--
            tatus bar scrim（状态栏纱布） 当CollapsingToolbarLayout滑动到一个确定的阀值时，
            状态栏显示或隐藏纱布，你可以通过setStatusBarScrim(Drawable)来设置纱布图片。
            提醒：同内容纱布一样，状态栏纱布可以是图片也可以是一个颜色值，如果要显示颜色值，
            在xml 中用statusBarScrim 属性指定。
            -->

            <!--
            app:contentScrim="@color/c_3ec88e" 内容纱布
            当CollapsingToolbarLayout滑动到一个确定的阀值时将显示或者隐藏内容纱布，
            可以通过setContentScrim(Drawable)来设置纱布的图片。
            提醒：纱布可以是图片也可以是颜色色值，如果要显示颜色，
            在xml 布局文件中用contentScrim属性添加，
            代码如下：app:contentScrim="@color/colorPrimary"
            -->

            <!--
            注意：Toolbar 和CollapsingToolbarLayout 同时设置了title时，
            不会显示Toolbartitle而是显示CollapsingToolbarLayout 的title，
            如果要显示Toolbar 的title，你可一在代码中添加如下代码：
            collapsingToolbarLayout.setTitle("");
            -->
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:scaleType="centerCrop"
                android:src="@mipmap/meizhi"
                app:layout_collapseMode="parallax"/>

            <android.support.v7.widget.Toolbar
                android:id="@+id/id_tool_bar"
                android:layout_width="match_parent"
                android:layout_height="60dp"
                app:layout_collapseMode="pin"
                >
                <!--app:title="美女啊"-->
                <!--app:titleTextColor="@color/c_3ec88e"-->
                <!--?attr/actionBarSize-->
                <ImageView
                    android:id="@+id/id_iv_toolbar"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:src="@mipmap/navigation_back_white"
                    android:visibility="visible"/>

                <TextView
                    android:id="@+id/id_tv_toolbar"
                    android:layout_width="wrap_content"
                    android:layout_height="match_parent"
                    android:layout_marginLeft="30dp"
                    android:gravity="center_vertical"
                    android:text="CollapsingToolbarLayout"
                    android:textColor="@color/white"
                    android:visibility="visible"/>
            </android.support.v7.widget.Toolbar>

        </android.support.design.widget.CollapsingToolbarLayout>

        <!-- //parallax ：视差模式和设置成none类似(一般不用)
               //“pin”：固定模式，在折叠的时候最后将所有的内容，包括title，左边返回键，右边菜单键都固定在顶端；
               //exitUntilCollapsed:向上滚动中间包裹内容渐渐退出屏幕，toolbar最后折叠在顶端。滑动返回为去掉toolbar的高度
               //enterAlways:设置这个flag时，向上滚动时候，整个CollapsingToolbarLayout退出屏幕，
               当向下的滚动都会导致整个CollapsingToolbarLayout先变为可见，然后才能开始下滑”//滑动范围为整个CollapsingToolbarLayout的高度
               //scroll:所有想滚动出屏幕的view都需要设置这个flag，没有设置这个flag的view将被固定在屏幕顶部-->
    </android.support.design.widget.AppBarLayout>

    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
        >
        <!--//appbar_scrolling_view_behavior让NestedScrollView内容最终能够显示在AppBarLayout的下面，否则会显示在顶部-->

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="18dp"
            android:text="@string/large_text"/>

    </android.support.v4.widget.NestedScrollView>


    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        app:layout_anchor="@id/appbar_layout"
        app:layout_anchorGravity="bottom|right|end"
        app:srcCompat="@android:drawable/ic_dialog_email"/>


</android.support.design.widget.CoordinatorLayout>